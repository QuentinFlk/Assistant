// <auto-generated />
using System;
using Assistant_Bdd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assistant_Bdd.Migrations
{
    [DbContext(typeof(AssistantContext))]
    [Migration("20240106141011_ajout table tag et tagassistant et ajout d'un booléen assisatnt global")]
    partial class ajouttabletagettagassistantetajoutdunbooléenassisatntglobal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assistant_Bdd.Models.Assistant", b =>
                {
                    b.Property<int>("IdAssistant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAssistant"));

                    b.Property<bool>("AssistantActif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationAssistance")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAssistant")
                        .HasColumnType("ntext");

                    b.Property<string>("IdCreateurAssistant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionAssistant")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsAssistantGlobal")
                        .HasColumnType("bit");

                    b.Property<string>("LogoAssistant")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomAssistant")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OpenAiAssisantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAssistance")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAssistant");

                    b.ToTable("Assistant");
                });

            modelBuilder.Entity("Assistant_Bdd.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<bool>("ClientActif")
                        .HasColumnType("bit");

                    b.Property<string>("EmailClient")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NomClient")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TelephoneClient")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdClient");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Assistant_Bdd.Models.Discussion", b =>
                {
                    b.Property<int>("IdDiscussion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiscussion"));

                    b.Property<DateTime>("CreationDiscussion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdAssistant")
                        .HasColumnType("int");

                    b.Property<string>("OpenAiDiscussionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutDiscussion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDiscussion");

                    b.HasIndex("IdAssistant");

                    b.ToTable("Discussion");
                });

            modelBuilder.Entity("Assistant_Bdd.Models.Document", b =>
                {
                    b.Property<int>("IdDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocument"));

                    b.Property<string>("NomDocument")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OpenAiDocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferentDocument")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeDocument")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpladDocument")
                        .HasColumnType("datetime2");

                    b.HasKey("IdDocument");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("Assistant_Bdd.Models.Message", b =>
                {
                    b.Property<int>("IdMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMessage"));

                    b.Property<DateTime>("CreationMessage")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdDiscussion")
                        .HasColumnType("int");

                    b.Property<string>("OpenAiMessageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutMessage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMessage");

                    b.HasIndex("IdDiscussion");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Assistant_Bdd.Models.Tag", b =>
                {
                    b.Property<int>("IdTag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTag"));

                    b.Property<DateTime>("CreationTag")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibelleTag")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTag");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("Assistant_Bdd.Models.TagAssistant", b =>
                {
                    b.Property<int>("IdTag")
                        .HasColumnType("int");

                    b.Property<int>("IdAssistant")
                        .HasColumnType("int");

                    b.HasKey("IdTag", "IdAssistant");

                    b.HasIndex("IdAssistant");

                    b.ToTable("TagAssistant");
                });

            modelBuilder.Entity("Assistant_Bdd.Models.Discussion", b =>
                {
                    b.HasOne("Assistant_Bdd.Models.Assistant", "Assistant")
                        .WithMany()
                        .HasForeignKey("IdAssistant");

                    b.Navigation("Assistant");
                });

            modelBuilder.Entity("Assistant_Bdd.Models.Message", b =>
                {
                    b.HasOne("Assistant_Bdd.Models.Discussion", "Discussion")
                        .WithMany()
                        .HasForeignKey("IdDiscussion");

                    b.Navigation("Discussion");
                });

            modelBuilder.Entity("Assistant_Bdd.Models.TagAssistant", b =>
                {
                    b.HasOne("Assistant_Bdd.Models.Assistant", "Assistant")
                        .WithMany()
                        .HasForeignKey("IdAssistant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assistant_Bdd.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("IdTag")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assistant");

                    b.Navigation("Tag");
                });
#pragma warning restore 612, 618
        }
    }
}
